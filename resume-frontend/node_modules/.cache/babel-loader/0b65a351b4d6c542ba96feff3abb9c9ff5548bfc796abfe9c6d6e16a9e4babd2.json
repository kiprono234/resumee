{"ast":null,"code":"var _jsxFileName = \"/home/kipronok/Development/code/se-prep/resumee/resume-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import LandingPage from './LandingPage';\n// import CreateResume from './CreateResume';\n// import ResumeList from './ResumeList';\n// import ViewResume from './ViewResume';\n// import './App.css';\n\n// function App() {\n//   // Tracks the current page state ('landing', 'create', 'list', 'view')\n//   const [currentPage, setCurrentPage] = useState('landing');\n\n//   // Loads résumés from localStorage on initialization and tracks the list of résumés\n//   const [resumes, setResumes] = useState(() => {\n//     const savedResumes = localStorage.getItem('resumes');\n//     return savedResumes ? JSON.parse(savedResumes) : [];\n//   });\n\n//   // Tracks the résumé selected for viewing\n//   const [selectedResume, setSelectedResume] = useState(null);\n\n//   // Navigates to the Create Résumé page\n//   const handleCreateResume = () => setCurrentPage('create');\n\n//   // Navigates to the View Résumé page with the selected résumé\n//   const handleViewResume = (resume) => {\n//     setSelectedResume(resume); // Set the resume to be viewed\n//     setCurrentPage('view'); // Navigate to the View Résumé page\n//   };\n\n//   // Navigates back to the Landing Page and resets the selected résumé\n//   const handleBackToLanding = () => {\n//     setCurrentPage('landing');\n//     setSelectedResume(null); // Clear the selected résumé\n//   };\n\n//   // Adds a new résumé to the list and persists it to localStorage\n//   const addResume = (newResume) => {\n//     const updatedResumes = [...resumes, newResume];\n//     setResumes(updatedResumes); // Update résumés state\n//     localStorage.setItem('resumes', JSON.stringify(updatedResumes)); // Save to localStorage\n//   };\n\n//   return (\n//     <div>\n//       {/* Landing Page */}\n//       {currentPage === 'landing' && (\n//         <LandingPage\n//           onCreateResume={handleCreateResume} // Handle navigation to Create Résumé page\n//           onViewResume={() => setCurrentPage('list')} // Navigate to Résumé List\n//         />\n//       )}\n\n//       {/* Create Résumé Page */}\n//       {currentPage === 'create' && (\n//         <CreateResume\n//           addResume={(data) => {\n//             addResume(data); // Add the newly created résumé\n//             setCurrentPage('list'); // Navigate to Résumé List page\n//           }}\n//         />\n//       )}\n\n//       {/* Résumé List Page */}\n//       {currentPage === 'list' && (\n//         <ResumeList\n//           resumes={resumes} // List of all résumés\n//           onViewResume={handleViewResume} // Handle viewing a specific résumé\n//         />\n//       )}\n\n//       {/* View Résumé Page */}\n//       {currentPage === 'view' && selectedResume && (\n//         <ViewResume\n//           resume={selectedResume} // Pass the selected résumé to the ViewResume component\n//         />\n//       )}\n\n//       {/* Back Button */}\n//       {currentPage !== 'landing' && (\n//         <button\n//           onClick={handleBackToLanding} // Handle navigation back to the Landing Page\n//           className=\"back-button\"\n//         >\n//           Back\n//         </button>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n// import React, { useState } from 'react';\n// import LandingPage from './LandingPage';\n// import CreateResume from './CreateResume';\n// import ResumeList from './ResumeList';\n// import ViewResume from './ViewResume';\n// import './App.css';\n\n// function App() {\n//   const [currentPage, setCurrentPage] = useState('landing'); // Tracks current page state\n//   const [resumes, setResumes] = useState(() => {\n//     // Load resumes from localStorage on initialization\n//     const savedResumes = localStorage.getItem('resumes');\n//     return savedResumes ? JSON.parse(savedResumes) : [];\n//   });\n//   const [selectedResume, setSelectedResume] = useState(null); // Tracks selected résumé for viewing\n\n//   // Handle navigation to Create Résumé page\n//   const handleCreateResume = () => setCurrentPage('create');\n\n//   // Handle navigation to View Résumé page with selected résumé\n//   const handleViewResume = (resume) => {\n//     setSelectedResume(resume);\n//     setCurrentPage('view');\n//   };\n\n//   // Handle navigation back to Landing Page\n//   const handleBackToLanding = () => {\n//     setCurrentPage('landing');\n//     setSelectedResume(null); // Reset selected résumé\n//   };\n\n//   // Add a new résumé to the list\n//   const addResume = (newResume) => {\n//     const updatedResumes = [...resumes, newResume];\n//     setResumes(updatedResumes);\n//     localStorage.setItem('resumes', JSON.stringify(updatedResumes)); // Persist to localStorage\n//   };\n\n//   return (\n//     <div>\n//       {/* Landing Page */}\n//       {currentPage === 'landing' && (\n//         <LandingPage\n//           onCreateResume={handleCreateResume}\n//           onViewResume={() => setCurrentPage('list')} // Navigate to Résumé List\n//         />\n//       )}\n\n//       {/* Create Résumé Page */}\n//       {currentPage === 'create' && (\n//         <CreateResume\n//           addResume={(data) => {\n//             addResume(data);\n//             setCurrentPage('list'); // Navigate to Résumé List after creation\n//           }}\n//         />\n//       )}\n\n//       {/* Résumé List Page */}\n//       {currentPage === 'list' && (\n//         <ResumeList\n//           resumes={resumes}\n//           onViewResume={handleViewResume} // Pass the handleViewResume function\n//         />\n//       )}\n\n//       {/* View Résumé Page */}\n//       {currentPage === 'view' && selectedResume && (\n//         <ViewResume resume={selectedResume} />\n//       )}\n\n//       {/* Back Button */}\n//       {currentPage !== 'landing' && (\n//         <button onClick={handleBackToLanding} className=\"back-button\">\n//           Back\n//         </button>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n// import React, { useState } from 'react';\n// import LandingPage from './LandingPage';\n// import CreateResume from './CreateResume';\n// import ResumeList from './ResumeList';\n// import ViewResume from './ViewResume';\n// import './App.css';\n\n// function App() {\n//   const [currentPage, setCurrentPage] = useState('landing');\n//   const [resumes, setResumes] = useState(() => {\n//     const savedResumes = localStorage.getItem('resumes');\n//     return savedResumes ? JSON.parse(savedResumes) : [];\n//   });\n//   const [selectedResume, setSelectedResume] = useState(null);\n\n//   // Navigate to Create Résumé page\n//   const handleCreateResume = () => setCurrentPage('create');\n\n//   // Navigate to View Résumé page\n//   const handleViewResume = (resume) => {\n//     setSelectedResume(resume);\n//     setCurrentPage('view');\n//   };\n\n//   // Navigate to Edit Résumé page\n//   const handleEditResume = (resume) => {\n//     setSelectedResume(resume);\n//     setCurrentPage('create'); // Reuse the create page for editing\n//   };\n\n//   // Navigate back to Landing Page\n//   const handleBackToLanding = () => {\n//     setCurrentPage('landing');\n//     setSelectedResume(null);\n//   };\n\n//   // Add or update a résumé\n//   const addOrUpdateResume = (newResume) => {\n//     let updatedResumes;\n//     if (selectedResume) {\n//       // Update existing résumé\n//       updatedResumes = resumes.map((resume) =>\n//         resume.id === selectedResume.id ? newResume : resume\n//       );\n//     } else {\n//       // Add new résumé\n//       updatedResumes = [...resumes, newResume];\n//     }\n//     setResumes(updatedResumes);\n//     localStorage.setItem('resumes', JSON.stringify(updatedResumes));\n//   };\n//   const handleDeleteResume = (id) => {\n//     const updatedResumes = resumes.filter((resume) => resume.id !== id);\n//     setResumes(updatedResumes);\n//     localStorage.setItem('resumes', JSON.stringify(updatedResumes));\n//   };\n\n//   return (\n//     <div>\n//       {/* Landing Page */}\n//       {currentPage === 'landing' && (\n//         <LandingPage\n//           onCreateResume={handleCreateResume}\n//           onViewResume={() => setCurrentPage('list')}\n//         />\n//       )}\n\n//       {/* Create Résumé Page */}\n//       {currentPage === 'create' && (\n//         <CreateResume\n//           addResume={(data) => {\n//             addOrUpdateResume(data);\n//             setCurrentPage('list'); // Navigate to Résumé List after creation/editing\n//           }}\n//           resume={selectedResume} // Pass the selected résumé for editing\n//         />\n//       )}\n\n//       {/* Résumé List Page */}\n//       {currentPage === 'list' && (\n//         <ResumeList\n//           resumes={resumes}\n//           onViewResume={handleViewResume} // Handle View action\n//           onEditResume={handleEditResume} // Handle Edit action\n//         />\n//       )}\n\n//       {/* View Résumé Page */}\n//       {currentPage === 'view' && selectedResume && (\n//         <ViewResume resume={selectedResume} />\n//       )}\n\n//       {/* Back Button */}\n//       {currentPage !== 'landing' && (\n//         <button onClick={handleBackToLanding} className=\"back-button\">\n//           Back\n//         </button>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from 'react';\nimport LandingPage from './LandingPage';\nimport CreateResume from './CreateResume';\nimport ResumeList from './ResumeList';\nimport ViewResume from './ViewResume';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState('landing');\n  const [resumes, setResumes] = useState(() => {\n    const savedResumes = localStorage.getItem('resumes');\n    return savedResumes ? JSON.parse(savedResumes) : [];\n  });\n  const [selectedResume, setSelectedResume] = useState(null);\n\n  // Navigate to Create Résumé page\n  const handleCreateResume = () => setCurrentPage('create');\n\n  // Navigate to View Résumé page\n  const handleViewResume = resume => {\n    setSelectedResume(resume);\n    setCurrentPage('view');\n  };\n\n  // Navigate to Edit Résumé page\n  const handleEditResume = resume => {\n    setSelectedResume(resume);\n    setCurrentPage('create'); // Reuse the create page for editing\n  };\n\n  // Navigate back to Landing Page\n  const handleBackToLanding = () => {\n    setCurrentPage('landing');\n    setSelectedResume(null);\n  };\n\n  // Add or update a résumé\n  const addOrUpdateResume = newResume => {\n    let updatedResumes;\n    if (selectedResume) {\n      // Update existing résumé\n      updatedResumes = resumes.map(resume => resume.id === selectedResume.id ? newResume : resume);\n    } else {\n      // Add new résumé\n      updatedResumes = [...resumes, newResume];\n    }\n    setResumes(updatedResumes);\n    localStorage.setItem('resumes', JSON.stringify(updatedResumes));\n  };\n\n  // Delete a résumé\n  const handleDeleteResume = id => {\n    const updatedResumes = resumes.filter(resume => resume.id !== id);\n    setResumes(updatedResumes);\n    localStorage.setItem('resumes', JSON.stringify(updatedResumes));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentPage === 'landing' && /*#__PURE__*/_jsxDEV(LandingPage, {\n      onCreateResume: handleCreateResume,\n      onViewResume: () => setCurrentPage('list')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }, this), currentPage === 'create' && /*#__PURE__*/_jsxDEV(CreateResume, {\n      addResume: data => {\n        addOrUpdateResume(data);\n        setCurrentPage('list'); // Navigate to Résumé List after creation/editing\n      },\n      resume: selectedResume // Pass the selected résumé for editing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }, this), currentPage === 'list' && /*#__PURE__*/_jsxDEV(ResumeList, {\n      resumes: resumes,\n      onViewResume: handleViewResume // Handle View action\n      ,\n      onEditResume: handleEditResume // Handle Edit action\n      ,\n      onDeleteResume: handleDeleteResume // Pass delete function\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }, this), currentPage === 'view' && selectedResume && /*#__PURE__*/_jsxDEV(ViewResume, {\n      resume: selectedResume,\n      onDeleteResume: handleDeleteResume // Pass delete function\n      ,\n      onBack: handleBackToLanding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }, this), currentPage !== 'landing' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBackToLanding,\n      className: \"back-button\",\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WoDhtiDlP+mf3E1hltl7fWZyU9A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LandingPage","CreateResume","ResumeList","ViewResume","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","resumes","setResumes","savedResumes","localStorage","getItem","JSON","parse","selectedResume","setSelectedResume","handleCreateResume","handleViewResume","resume","handleEditResume","handleBackToLanding","addOrUpdateResume","newResume","updatedResumes","map","id","setItem","stringify","handleDeleteResume","filter","children","onCreateResume","onViewResume","fileName","_jsxFileName","lineNumber","columnNumber","addResume","data","onEditResume","onDeleteResume","onBack","onClick","className","_c","$RefreshReg$"],"sources":["/home/kipronok/Development/code/se-prep/resumee/resume-frontend/src/App.js"],"sourcesContent":["\n// import React, { useState } from 'react';\n// import LandingPage from './LandingPage';\n// import CreateResume from './CreateResume';\n// import ResumeList from './ResumeList';\n// import ViewResume from './ViewResume';\n// import './App.css';\n\n// function App() {\n//   // Tracks the current page state ('landing', 'create', 'list', 'view')\n//   const [currentPage, setCurrentPage] = useState('landing');\n\n//   // Loads résumés from localStorage on initialization and tracks the list of résumés\n//   const [resumes, setResumes] = useState(() => {\n//     const savedResumes = localStorage.getItem('resumes');\n//     return savedResumes ? JSON.parse(savedResumes) : [];\n//   });\n\n//   // Tracks the résumé selected for viewing\n//   const [selectedResume, setSelectedResume] = useState(null);\n\n//   // Navigates to the Create Résumé page\n//   const handleCreateResume = () => setCurrentPage('create');\n\n//   // Navigates to the View Résumé page with the selected résumé\n//   const handleViewResume = (resume) => {\n//     setSelectedResume(resume); // Set the resume to be viewed\n//     setCurrentPage('view'); // Navigate to the View Résumé page\n//   };\n\n//   // Navigates back to the Landing Page and resets the selected résumé\n//   const handleBackToLanding = () => {\n//     setCurrentPage('landing');\n//     setSelectedResume(null); // Clear the selected résumé\n//   };\n\n//   // Adds a new résumé to the list and persists it to localStorage\n//   const addResume = (newResume) => {\n//     const updatedResumes = [...resumes, newResume];\n//     setResumes(updatedResumes); // Update résumés state\n//     localStorage.setItem('resumes', JSON.stringify(updatedResumes)); // Save to localStorage\n//   };\n\n//   return (\n//     <div>\n//       {/* Landing Page */}\n//       {currentPage === 'landing' && (\n//         <LandingPage\n//           onCreateResume={handleCreateResume} // Handle navigation to Create Résumé page\n//           onViewResume={() => setCurrentPage('list')} // Navigate to Résumé List\n//         />\n//       )}\n\n//       {/* Create Résumé Page */}\n//       {currentPage === 'create' && (\n//         <CreateResume\n//           addResume={(data) => {\n//             addResume(data); // Add the newly created résumé\n//             setCurrentPage('list'); // Navigate to Résumé List page\n//           }}\n//         />\n//       )}\n\n//       {/* Résumé List Page */}\n//       {currentPage === 'list' && (\n//         <ResumeList\n//           resumes={resumes} // List of all résumés\n//           onViewResume={handleViewResume} // Handle viewing a specific résumé\n//         />\n//       )}\n\n//       {/* View Résumé Page */}\n//       {currentPage === 'view' && selectedResume && (\n//         <ViewResume\n//           resume={selectedResume} // Pass the selected résumé to the ViewResume component\n//         />\n//       )}\n\n//       {/* Back Button */}\n//       {currentPage !== 'landing' && (\n//         <button\n//           onClick={handleBackToLanding} // Handle navigation back to the Landing Page\n//           className=\"back-button\"\n//         >\n//           Back\n//         </button>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n// import React, { useState } from 'react';\n// import LandingPage from './LandingPage';\n// import CreateResume from './CreateResume';\n// import ResumeList from './ResumeList';\n// import ViewResume from './ViewResume';\n// import './App.css';\n\n// function App() {\n//   const [currentPage, setCurrentPage] = useState('landing'); // Tracks current page state\n//   const [resumes, setResumes] = useState(() => {\n//     // Load resumes from localStorage on initialization\n//     const savedResumes = localStorage.getItem('resumes');\n//     return savedResumes ? JSON.parse(savedResumes) : [];\n//   });\n//   const [selectedResume, setSelectedResume] = useState(null); // Tracks selected résumé for viewing\n\n//   // Handle navigation to Create Résumé page\n//   const handleCreateResume = () => setCurrentPage('create');\n\n//   // Handle navigation to View Résumé page with selected résumé\n//   const handleViewResume = (resume) => {\n//     setSelectedResume(resume);\n//     setCurrentPage('view');\n//   };\n\n//   // Handle navigation back to Landing Page\n//   const handleBackToLanding = () => {\n//     setCurrentPage('landing');\n//     setSelectedResume(null); // Reset selected résumé\n//   };\n\n//   // Add a new résumé to the list\n//   const addResume = (newResume) => {\n//     const updatedResumes = [...resumes, newResume];\n//     setResumes(updatedResumes);\n//     localStorage.setItem('resumes', JSON.stringify(updatedResumes)); // Persist to localStorage\n//   };\n\n//   return (\n//     <div>\n//       {/* Landing Page */}\n//       {currentPage === 'landing' && (\n//         <LandingPage\n//           onCreateResume={handleCreateResume}\n//           onViewResume={() => setCurrentPage('list')} // Navigate to Résumé List\n//         />\n//       )}\n\n//       {/* Create Résumé Page */}\n//       {currentPage === 'create' && (\n//         <CreateResume\n//           addResume={(data) => {\n//             addResume(data);\n//             setCurrentPage('list'); // Navigate to Résumé List after creation\n//           }}\n//         />\n//       )}\n\n//       {/* Résumé List Page */}\n//       {currentPage === 'list' && (\n//         <ResumeList\n//           resumes={resumes}\n//           onViewResume={handleViewResume} // Pass the handleViewResume function\n//         />\n//       )}\n\n//       {/* View Résumé Page */}\n//       {currentPage === 'view' && selectedResume && (\n//         <ViewResume resume={selectedResume} />\n//       )}\n\n//       {/* Back Button */}\n//       {currentPage !== 'landing' && (\n//         <button onClick={handleBackToLanding} className=\"back-button\">\n//           Back\n//         </button>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n// import React, { useState } from 'react';\n// import LandingPage from './LandingPage';\n// import CreateResume from './CreateResume';\n// import ResumeList from './ResumeList';\n// import ViewResume from './ViewResume';\n// import './App.css';\n\n// function App() {\n//   const [currentPage, setCurrentPage] = useState('landing');\n//   const [resumes, setResumes] = useState(() => {\n//     const savedResumes = localStorage.getItem('resumes');\n//     return savedResumes ? JSON.parse(savedResumes) : [];\n//   });\n//   const [selectedResume, setSelectedResume] = useState(null);\n\n//   // Navigate to Create Résumé page\n//   const handleCreateResume = () => setCurrentPage('create');\n\n//   // Navigate to View Résumé page\n//   const handleViewResume = (resume) => {\n//     setSelectedResume(resume);\n//     setCurrentPage('view');\n//   };\n\n//   // Navigate to Edit Résumé page\n//   const handleEditResume = (resume) => {\n//     setSelectedResume(resume);\n//     setCurrentPage('create'); // Reuse the create page for editing\n//   };\n\n//   // Navigate back to Landing Page\n//   const handleBackToLanding = () => {\n//     setCurrentPage('landing');\n//     setSelectedResume(null);\n//   };\n\n//   // Add or update a résumé\n//   const addOrUpdateResume = (newResume) => {\n//     let updatedResumes;\n//     if (selectedResume) {\n//       // Update existing résumé\n//       updatedResumes = resumes.map((resume) =>\n//         resume.id === selectedResume.id ? newResume : resume\n//       );\n//     } else {\n//       // Add new résumé\n//       updatedResumes = [...resumes, newResume];\n//     }\n//     setResumes(updatedResumes);\n//     localStorage.setItem('resumes', JSON.stringify(updatedResumes));\n//   };\n//   const handleDeleteResume = (id) => {\n//     const updatedResumes = resumes.filter((resume) => resume.id !== id);\n//     setResumes(updatedResumes);\n//     localStorage.setItem('resumes', JSON.stringify(updatedResumes));\n//   };\n\n//   return (\n//     <div>\n//       {/* Landing Page */}\n//       {currentPage === 'landing' && (\n//         <LandingPage\n//           onCreateResume={handleCreateResume}\n//           onViewResume={() => setCurrentPage('list')}\n//         />\n//       )}\n\n//       {/* Create Résumé Page */}\n//       {currentPage === 'create' && (\n//         <CreateResume\n//           addResume={(data) => {\n//             addOrUpdateResume(data);\n//             setCurrentPage('list'); // Navigate to Résumé List after creation/editing\n//           }}\n//           resume={selectedResume} // Pass the selected résumé for editing\n//         />\n//       )}\n\n//       {/* Résumé List Page */}\n//       {currentPage === 'list' && (\n//         <ResumeList\n//           resumes={resumes}\n//           onViewResume={handleViewResume} // Handle View action\n//           onEditResume={handleEditResume} // Handle Edit action\n//         />\n//       )}\n\n//       {/* View Résumé Page */}\n//       {currentPage === 'view' && selectedResume && (\n//         <ViewResume resume={selectedResume} />\n//       )}\n\n//       {/* Back Button */}\n//       {currentPage !== 'landing' && (\n//         <button onClick={handleBackToLanding} className=\"back-button\">\n//           Back\n//         </button>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from 'react';\nimport LandingPage from './LandingPage';\nimport CreateResume from './CreateResume';\nimport ResumeList from './ResumeList';\nimport ViewResume from './ViewResume';\nimport './App.css';\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState('landing');\n  const [resumes, setResumes] = useState(() => {\n    const savedResumes = localStorage.getItem('resumes');\n    return savedResumes ? JSON.parse(savedResumes) : [];\n  });\n  const [selectedResume, setSelectedResume] = useState(null);\n\n  // Navigate to Create Résumé page\n  const handleCreateResume = () => setCurrentPage('create');\n\n  // Navigate to View Résumé page\n  const handleViewResume = (resume) => {\n    setSelectedResume(resume);\n    setCurrentPage('view');\n  };\n\n  // Navigate to Edit Résumé page\n  const handleEditResume = (resume) => {\n    setSelectedResume(resume);\n    setCurrentPage('create'); // Reuse the create page for editing\n  };\n\n  // Navigate back to Landing Page\n  const handleBackToLanding = () => {\n    setCurrentPage('landing');\n    setSelectedResume(null);\n  };\n\n  // Add or update a résumé\n  const addOrUpdateResume = (newResume) => {\n    let updatedResumes;\n    if (selectedResume) {\n      // Update existing résumé\n      updatedResumes = resumes.map((resume) =>\n        resume.id === selectedResume.id ? newResume : resume\n      );\n    } else {\n      // Add new résumé\n      updatedResumes = [...resumes, newResume];\n    }\n    setResumes(updatedResumes);\n    localStorage.setItem('resumes', JSON.stringify(updatedResumes));\n  };\n\n  // Delete a résumé\n  const handleDeleteResume = (id) => {\n    const updatedResumes = resumes.filter((resume) => resume.id !== id);\n    setResumes(updatedResumes);\n    localStorage.setItem('resumes', JSON.stringify(updatedResumes));\n  };\n\n  return (\n    <div>\n      {/* Landing Page */}\n      {currentPage === 'landing' && (\n        <LandingPage\n          onCreateResume={handleCreateResume}\n          onViewResume={() => setCurrentPage('list')}\n        />\n      )}\n\n      {/* Create Résumé Page */}\n      {currentPage === 'create' && (\n        <CreateResume\n          addResume={(data) => {\n            addOrUpdateResume(data);\n            setCurrentPage('list'); // Navigate to Résumé List after creation/editing\n          }}\n          resume={selectedResume} // Pass the selected résumé for editing\n        />\n      )}\n\n      {/* Résumé List Page */}\n      {currentPage === 'list' && (\n        <ResumeList\n          resumes={resumes}\n          onViewResume={handleViewResume} // Handle View action\n          onEditResume={handleEditResume} // Handle Edit action\n          onDeleteResume={handleDeleteResume} // Pass delete function\n        />\n      )}\n\n      {/* View Résumé Page */}\n      {currentPage === 'view' && selectedResume && (\n        <ViewResume\n          resume={selectedResume}\n          onDeleteResume={handleDeleteResume} // Pass delete function\n          onBack={handleBackToLanding}\n        />\n      )}\n\n      {/* Back Button */}\n      {currentPage !== 'landing' && (\n        <button onClick={handleBackToLanding} className=\"back-button\">\n          Back\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}